basic {
  # Data-Related Configs
  base_dataset_path = resources/ACE05-E
  predictions_path = resources/ACE05-E-Preds
  use_groundtruth = false
  increase_ace_dev_set = false

  # Model-Related Configs
  transformer = SpanBERT/spanbert-base-cased
  multi_piece_strategy = average
  latent_size = 500
  ffnn_size = 500
  ffnn_depth = 1
  feature_size = 50

  # Features-Related Configs
  combine_strategy = simple    # Supported values are simple and gated
  use_typ_features = false     # Event Type Features
  use_pol_features = false     # Polarity Features
  use_mod_features = false     # Modality Features
  use_gen_features = false     # Genericty Features
  use_ten_features = false     # Tense Features
  typ_noise_prob = 0.0
  pol_noise_prob = 0.0
  mod_noise_prob = 0.0
  gen_noise_prob = 0.0
  ten_noise_prob = 0.0

  # Training/Inference Configs
  gradient_checkpointing = false
  transformer_learning_rate = 5e-05
  task_learning_rate = 0.0005
  epochs = 50
  batch_size = 8
  transformer_dropout_rate = 0.5
  dropout_rate = 0.5
  max_grad_norm = 1.0
  transformer_weight_decay = 0.1

  # Others
  no_cuda = false
}

# Use type feature
simple_type_feature = ${basic} {
  combine_strategy = simple
  use_typ_features = true
}

gated_type_feature = ${basic} {
  combine_strategy = gated
  use_typ_features = true
}

# Use polarity feature
simple_polarity_feature = ${basic} {
  combine_strategy = simple
  use_pol_features = true
}

gated_polarity_feature = ${basic} {
  combine_strategy = gated
  use_pol_features = true
}

# Use modality feature
simple_modality_feature = ${basic} {
  combine_strategy = simple
  use_mod_features = true
}

gated_modality_feature = ${basic} {
  combine_strategy = gated
  use_mod_features = true
}

gated_modality_feature_with_random_noise = ${gated_modality_feature} {
  mod_noise_prob = 0.15
}

# Use genericity feature
simple_genericity_feature = ${basic} {
  combine_strategy = simple
  use_gen_features = true
}

gated_genericity_feature = ${basic} {
  combine_strategy = gated
  use_gen_features = true
}

gated_genericity_feature_with_random_noise = ${gated_genericity_feature} {
  gen_noise_prob = 0.15
}

# Use tense feature
simple_tense_feature = ${basic} {
  combine_strategy = simple
  use_ten_features = true
}

gated_tense_feature = ${basic} {
  combine_strategy = gated
  use_ten_features = true
}

gated_tense_feature_with_random_noise = ${gated_tense_feature} {
  ten_noise_prob = 0.25
}

# Use all features
simple_all_features = ${basic} {
  combine_strategy = simple   # Supported values are simple and gated
  use_typ_features = true     # Event Type Features
  use_pol_features = true     # Polarity Features
  use_mod_features = true     # Modality Features
  use_gen_features = true     # Genericty Features
  use_ten_features = true     # Tense Features
}

simple_all_features_groundtruth = ${simple_all_features} {
  use_groundtruth = true
}

simple_all_features_with_random_noise = ${simple_all_features} {
  mod_noise_prob = 0.15
  gen_noise_prob = 0.15
  ten_noise_prob = 0.25
}

gated_all_features = ${basic} {
  combine_strategy = gated   # Supported values are simple and gated
  use_typ_features = true    # Event Type Features
  use_pol_features = true    # Polarity Features
  use_mod_features = true    # Modality Features
  use_gen_features = true    # Genericty Features
  use_ten_features = true    # Tense Features
}

gated_all_features_with_random_noise = ${gated_all_features} {
  mod_noise_prob = 0.15
  gen_noise_prob = 0.15
  ten_noise_prob = 0.25
}
